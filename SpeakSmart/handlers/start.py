import logging
from aiogram import F
from aiogram.types import Message
from aiogram.filters import Command

from services.database import db
from config import config

logger = logging.getLogger(__name__)


async def cmd_start(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    try:
        user = message.from_user

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É
        db.add_user(user.id, user.username, user.first_name, user.last_name)

        welcome_text = (
            "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SpeakSmart!*\n\n"
            "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—É—é —Ä–µ—á—å –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ "
            "–∏ –æ—Ç–≤–µ—á—É –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã.\n\n"
            "üìö *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
            "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
            "/practice - –ù–∞—á–∞—Ç—å —è–∑—ã–∫–æ–≤—É—é –ø—Ä–∞–∫—Ç–∏–∫—É\n"
            "/support - –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É\n"
            "/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞\n"
            "/myid - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π ID\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É!"
        )

        await message.answer(welcome_text)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_start: {e}")
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")


async def cmd_myid(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /myid."""
    try:
        user_id = message.from_user.id
        response = (
            f"üÜî *–í–∞—à ID:* `{user_id}`\n"
            f"üõ°Ô∏è *ADMIN_ID –∏–∑ config:* `{config.ADMIN_ID}`\n\n"
            "–≠—Ç–æ—Ç ID –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É."
        )
        await message.answer(response)
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª —Å–≤–æ–π ID")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ cmd_myid: {e}")
        await message.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à ID.")


async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    help_text = (
        "üìñ *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:*\n\n"
        "üéØ *–Ø–∑—ã–∫–æ–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ (/practice):*\n"
        "- –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–æ–ª–æ—Å–æ–≤—É—é —Ñ—Ä–∞–∑—É\n"
        "- –í—ã –æ—Ç–≤–µ—á–∞–µ—Ç–µ –≥–æ–ª–æ—Å–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º\n"
        "- –ë–æ—Ç –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞—à –æ—Ç–≤–µ—Ç –∏ –¥–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å\n\n"
        "üÜò *–ü–æ–¥–¥–µ—Ä–∂–∫–∞ (/support):*\n"
        "- –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º\n"
        "- –ë–æ—Ç –Ω–∞–π–¥–µ—Ç –æ—Ç–≤–µ—Ç –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π\n"
        "- –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—Ç - —á–∞—Ç –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—É\n\n"
        "üîß *–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
        "/start - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞\n"
        "/myid - –£–∑–Ω–∞—Ç—å —Å–≤–æ–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä\n\n"
        "–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏—Ç–µ /practice –∏–ª–∏ /support!"
    )
    await message.answer(help_text)


def register_start_handlers(dp):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥."""
    try:
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
        dp.message.register(cmd_start, Command("start"))
        dp.message.register(cmd_myid, Command("myid"))
        dp.message.register(cmd_help, Command("help"))

        logger.info("–°—Ç–∞—Ä—Ç–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
        raise






